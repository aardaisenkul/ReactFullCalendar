{"ast":null,"code":"var _jsxFileName = \"/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/App.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport './App.css';\nimport axios from 'axios';\nimport { Calendar, DateLocalizer, momentLocalizer, globalizeLocalizer, move, Views, Navigate, components } from 'react-big-calendar';\nmoment.locale('en-GB');\nCalendar.momentLocalizer(moment);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.convertDate = date => {\n      return moment.utc(date).toDate();\n    };\n\n    this.state = {\n      cal_events: [//State is updated via componentDidMount\n      ]\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3001/events').then(response => {\n      console.log(response.data);\n      let appointments = response.data;\n\n      for (let i = 0; i < appointments.length; i++) {\n        appointments[i].start = this.convertDate(appointments[i].start);\n        appointments[i].end = this.convertDate(appointments[i].end);\n      }\n\n      this.setState({\n        cal_events: appointments\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      cal_events\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"React Calendar\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 700\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BigCalendar, {\n      events: cal_events,\n      step: 30,\n      defaultView: \"week\",\n      views: ['month', 'week', 'day'],\n      defaultDate: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/App.js"],"names":["React","Component","moment","axios","Calendar","DateLocalizer","momentLocalizer","globalizeLocalizer","move","Views","Navigate","components","locale","App","constructor","props","convertDate","date","utc","toDate","state","cal_events","componentDidMount","get","then","response","console","log","data","appointments","i","length","start","end","setState","catch","error","render","height","Date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;AACA,OAAO,mDAAP;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,QADJ,EAEIC,aAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,EAKIC,IALJ,EAMIC,KANJ,EAOIC,QAPJ,EAQIC,UARJ,QASO,oBATP;AAWAT,MAAM,CAACU,MAAP,CAAc,OAAd;AACAR,QAAQ,CAACE,eAAT,CAAyBJ,MAAzB;;AAIA,MAAMW,GAAN,SAAkBZ,SAAlB,CAA4B;AAI1Ba,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,WAXmB,GAWJC,IAAD,IAAU;AACtB,aAAOf,MAAM,CAACgB,GAAP,CAAWD,IAAX,EAAiBE,MAAjB,EAAP;AACD,KAbkB;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,CACV;AADU;AADD,KAAb;AAMD;;AAMDC,EAAAA,iBAAiB,GAAG;AAGlBnB,IAAAA,KAAK,CAACoB,GAAN,CAAU,8BAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,UAAIC,YAAY,GAAGJ,QAAQ,CAACG,IAA5B;;AAEA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAAY,CAACE,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAE5CD,QAAAA,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,GAAwB,KAAKhB,WAAL,CAAiBa,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAjC,CAAxB;AACAH,QAAAA,YAAY,CAACC,CAAD,CAAZ,CAAgBG,GAAhB,GAAsB,KAAKjB,WAAL,CAAiBa,YAAY,CAACC,CAAD,CAAZ,CAAgBG,GAAjC,CAAtB;AAED;;AAED,WAAKC,QAAL,CAAc;AACZb,QAAAA,UAAU,EAACQ;AADC,OAAd;AAID,KAhBH,EAiBGM,KAjBH,CAiBS,UAAUC,KAAV,EAAiB;AACtBV,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,KAnBH;AAoBD;;AAGDC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEhB,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,eAIE;AAAK,MAAA,KAAK,EAAE;AAAEkB,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,MAAM,EAAEjB,UADV;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,WAAW,EAAC,MAHd;AAIE,MAAA,KAAK,EAAE,CAAC,OAAD,EAAS,MAAT,EAAgB,KAAhB,CAJT;AAKE,MAAA,WAAW,EAAE,IAAIkB,IAAJ,EALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF;AAgBD;;AAjEyB;;AAoE5B,eAAe1B,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport './App.css';\nimport axios from 'axios'\nimport {\n    Calendar,\n    DateLocalizer,\n    momentLocalizer,\n    globalizeLocalizer,\n    move,\n    Views,\n    Navigate,\n    components,\n} from 'react-big-calendar'\n\nmoment.locale('en-GB');\nCalendar.momentLocalizer(moment);\n\n\n\nclass App extends Component {\n\n  \n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      cal_events: [\n        //State is updated via componentDidMount\n      ],\n    }\n\n  }\n\n  convertDate = (date) => {\n    return moment.utc(date).toDate()\n  }\n\n  componentDidMount() {\n\n\n    axios.get('http://localhost:3001/events')\n      .then(response => {\n        console.log(response.data);\n        let appointments = response.data;\n        \n        for (let i = 0; i < appointments.length; i++) {\n          \n          appointments[i].start = this.convertDate(appointments[i].start)\n          appointments[i].end = this.convertDate(appointments[i].end)\n          \n        }\n\n        this.setState({\n          cal_events:appointments\n        })\n  \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n\n  render() {\n\n    const { cal_events } = this.state\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">React Calendar</h1>\n        </header>\n        <div style={{ height: 700 }}>\n          <BigCalendar\n            events={cal_events}\n            step={30}\n            defaultView='week'\n            views={['month','week','day']}\n            defaultDate={new Date()}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}