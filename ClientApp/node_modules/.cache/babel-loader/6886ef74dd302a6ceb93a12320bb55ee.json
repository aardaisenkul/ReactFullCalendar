{"ast":null,"code":"var _jsxFileName = \"/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/components/FormAddEdit.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass AddEditForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: 0,\n      customer: '',\n      project: '',\n      type: '',\n      hours: 0,\n      description: '',\n      startdate: '',\n      enddate: ''\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitFormAdd = e => {\n      e.preventDefault();\n      fetch('http://localhost:5001/api/events', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          customer: this.state.customer,\n          project: this.state.project,\n          type: this.state.type,\n          hours: this.state.hours,\n          startdate: this.state.startdate,\n          enddate: this.state.enddate,\n          description: this.state.description\n        })\n      }).then(response => response.json()).then(event => {\n        if (Array.isArray(event)) {\n          this.props.addEventToState(event[0]);\n          this.props.toggle();\n        } else {\n          console.log('failure');\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.submitFormEdit = e => {\n      e.preventDefault();\n      fetch('http://localhost:5001/api/events', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.id,\n          customer: this.state.customer,\n          project: this.state.project,\n          type: this.state.type,\n          hours: this.state.hours,\n          startdate: this.state.startdate,\n          enddate: this.state.enddate,\n          description: this.state.description\n        })\n      }).then(response => response.json()).then(event => {\n        if (Array.isArray(event)) {\n          // console.log(item[0])\n          this.props.updateState(event[0]);\n          this.props.toggle();\n        } else {\n          console.log('failure');\n        }\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    // if item exists, populate the state with proper data\n    if (this.props.event) {\n      const {\n        id,\n        customer,\n        project,\n        type,\n        hours,\n        startdate,\n        enddate,\n        description\n      } = this.props.event;\n      this.setState({\n        id,\n        customer,\n        project,\n        type,\n        hours,\n        startdate,\n        enddate,\n        description\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.props.item ? this.submitFormEdit : this.submitFormAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"first\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"first\",\n      id: \"first\",\n      onChange: this.onChange,\n      value: this.state.first === null ? '' : this.state.first,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"last\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"last\",\n      id: \"last\",\n      onChange: this.onChange,\n      value: this.state.last === null ? '' : this.state.last,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      onChange: this.onChange,\n      value: this.state.email === null ? '' : this.state.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"phone\",\n      id: \"phone\",\n      onChange: this.onChange,\n      value: this.state.phone === null ? '' : this.state.phone,\n      placeholder: \"ex. 555-555-5555\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"location\",\n      id: \"location\",\n      onChange: this.onChange,\n      value: this.state.location === null ? '' : this.state.location,\n      placeholder: \"City, State\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"hobby\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"Hobby\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"hobby\",\n      id: \"hobby\",\n      onChange: this.onChange,\n      value: this.state.hobby,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nexport default AddEditForm;","map":{"version":3,"sources":["/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/components/FormAddEdit.js"],"names":["React","Button","Form","FormGroup","Label","Input","AddEditForm","Component","state","id","customer","project","type","hours","description","startdate","enddate","onChange","e","setState","target","name","value","submitFormAdd","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","event","Array","isArray","props","addEventToState","toggle","console","log","catch","err","submitFormEdit","updateState","componentDidMount","render","item","first","last","email","phone","location","hobby"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass AddEditForm extends React.Component {\n    state = {\n        id: 0,\n        customer: '',\n        project: '',\n        type: '',\n        hours: 0,\n        description: '',\n        startdate: '',\n        enddate:'',\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    submitFormAdd = e => {\n        e.preventDefault()\n        fetch('http://localhost:5001/api/events', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                customer: this.state.customer,\n                project: this.state.project,\n                type: this.state.type,\n                hours: this.state.hours,\n                startdate: this.state.startdate,\n                enddate: this.state.enddate,\n                description: this.state.description\n            })\n        })\n            .then(response => response.json())\n            .then(event => {\n                if (Array.isArray(event)) {\n                    this.props.addEventToState(event[0])\n                    this.props.toggle()\n                } else {\n                    console.log('failure')\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    submitFormEdit = e => {\n        e.preventDefault()\n        fetch('http://localhost:5001/api/events', {\n            method: 'put',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: this.state.id,\n                customer: this.state.customer,\n                project: this.state.project,\n                type: this.state.type,\n                hours: this.state.hours,\n                startdate: this.state.startdate,\n                enddate: this.state.enddate,\n                description: this.state.description\n            })\n        })\n            .then(response => response.json())\n            .then(event => {\n                if (Array.isArray(event)) {\n                    // console.log(item[0])\n                    this.props.updateState(event[0])\n                    this.props.toggle()\n                } else {\n                    console.log('failure')\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    componentDidMount() {\n        // if item exists, populate the state with proper data\n        if (this.props.event) {\n            const { id, customer, project, type, hours, startdate, enddate, description } = this.props.event\n            this.setState({ id, customer, project, type, hours, startdate, enddate, description })\n        }\n    }\n\n    render() {\n        return (\n            <Form onSubmit={this.props.item ? this.submitFormEdit : this.submitFormAdd}>\n                <FormGroup>\n                    <Label for=\"first\">First Name</Label>\n                    <Input type=\"text\" name=\"first\" id=\"first\" onChange={this.onChange} value={this.state.first === null ? '' : this.state.first} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"last\">Last Name</Label>\n                    <Input type=\"text\" name=\"last\" id=\"last\" onChange={this.onChange} value={this.state.last === null ? '' : this.state.last} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"email\">Email</Label>\n                    <Input type=\"email\" name=\"email\" id=\"email\" onChange={this.onChange} value={this.state.email === null ? '' : this.state.email} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"phone\">Phone</Label>\n                    <Input type=\"text\" name=\"phone\" id=\"phone\" onChange={this.onChange} value={this.state.phone === null ? '' : this.state.phone} placeholder=\"ex. 555-555-5555\" />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"location\">Location</Label>\n                    <Input type=\"text\" name=\"location\" id=\"location\" onChange={this.onChange} value={this.state.location === null ? '' : this.state.location} placeholder=\"City, State\" />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"hobby\">Hobby</Label>\n                    <Input type=\"text\" name=\"hobby\" id=\"hobby\" onChange={this.onChange} value={this.state.hobby} />\n                </FormGroup>\n                <Button>Submit</Button>\n            </Form>\n        );\n    }\n}\n\nexport default AddEditForm"]},"metadata":{},"sourceType":"module"}