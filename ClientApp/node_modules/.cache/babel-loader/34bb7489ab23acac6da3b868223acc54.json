{"ast":null,"code":"var _jsxFileName = \"/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/DemoApp.jsx\";\nimport React from 'react';\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { Container, Row, Col, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport DataTable from './components/DataTable';\nimport { CSVLink } from \"react-csv\";\nimport axios from 'axios';\nimport ModalForm from './components/Modal';\nimport AddEditForm from './components/FormAddEdit';\nexport default class DemoApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      weekendsVisible: true,\n      currentDay: '',\n      types: [],\n      currentEvents: [],\n      newEvents: []\n    };\n\n    this.addEventToState = event => {\n      console.log(this.state.currentEvents + \"BU ADD EVENT ÖNCESİ\");\n      this.setState(prevState => ({\n        currentEvents: [...prevState.currentEvents, event],\n        newEvents: [...prevState.newEvents, event]\n      }));\n      console.log(this.state.currentEvents + \"BU ADD EVENT SONRASI\");\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.updateState = event => {\n      const eventIndex = this.state.currentEvents.findIndex(data => data.id === event.id);\n      const newArray = [// destructure all items from beginning to the indexed item\n      ...this.state.currentEvents.slice(0, eventIndex), // add the updated item to the array\n      event, // add the rest of the items to the array from the index after the replaced item\n      ...this.state.currentEvents.slice(eventIndex + 1)];\n      this.setState({\n        currentEvents: newArray\n      });\n    };\n\n    this.deleteItem = id => {\n      let confirmDelete = window.confirm('Delete event forever?');\n      console.log(id.event.id);\n\n      if (confirmDelete) {\n        const url = \"https://localhost:5001/api/events/DeleteEventDetails/\" + id.event.id;\n        axios.delete(url).then(item => {\n          this.deleteEventFromState(id.event.id);\n        }).catch(err => {\n          console.log(err.response);\n        });\n      }\n\n      ;\n    };\n\n    this.deleteEventFromState = id => {\n      const updatedEvents = this.state.currentEvents.filter(event => event.id !== id);\n      this.setState({\n        currentEvents: updatedEvents\n      });\n    };\n\n    this.handleWeekendsToggle = () => {\n      this.setState({\n        weekendsVisible: !this.state.weekendsVisible\n      });\n    };\n\n    this.handleDateSelect = selectInfo => {\n      console.log(selectInfo.startStr); //let description = prompt('Please enter a new title for your event')\n\n      let calendarApi = selectInfo.view.calendar;\n      calendarApi.unselect(); // clear date selection\n\n      if (false) {\n        calendarApi.addEvent({\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: true\n        });\n      }\n      /* this.addEventToState()*/\n\n    };\n\n    this.handleEventClick = clickInfo => {\n      console.log(clickInfo.event.day);\n\n      if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.extendedProps.description}'`)) {\n        clickInfo.event.remove();\n      }\n    };\n\n    this.handleEvents = events => {\n      this.setState({\n        newEvents: events\n      });\n    };\n  }\n\n  async componentDidMount() {\n    await axios.get('/api/events').then(response => {\n      this.setState({\n        currentEvents: response.data\n      });\n      this.setState({\n        newEvents: response.data\n      });\n      console.log({\n        calendarEvents: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    await axios.get('/api/types').then(response => {\n      this.setState({\n        types: response.data\n      });\n      console.log({\n        types: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return this.renderCalendar();\n  }\n\n  renderTahta() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"DemoApp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        margin: \"20px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, \"Event Database\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      currentEvents: this.state.currentEvents,\n      updateState: this.updateState,\n      deleteEventFromState: this.deleteEventFromState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CSVLink, {\n      filename: \"db.csv\",\n      color: \"primary\",\n      style: {\n        float: \"left\",\n        marginRight: \"10px\"\n      },\n      className: \"btn btn-primary\",\n      data: this.state.currentEvents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, \"Download CSV\"), /*#__PURE__*/React.createElement(ModalForm, {\n      buttonLabel: \"Add Event\",\n      addEventToState: this.addEventToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n  renderCalendar() {\n    const closeBtn = /*#__PURE__*/React.createElement(\"button\", {\n      className: \"close\",\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 26\n      }\n    }, \"\\xD7\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, this.renderSidebar(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n      },\n      initialView: \"dayGridMonth\",\n      editable: true,\n      selectable: true,\n      selectMirror: true,\n      dayMaxEvents: true,\n      weekends: this.state.weekendsVisible\n      /*initialEvents={INITIAL_EVENTS} */\n\n      /* alternatively, use the `events` setting to fetch from a feed*/\n      ,\n      events: this.state.newEvents,\n      select: this.handleDateSelect,\n      dateClick: e => {\n        this.setState.currentDay = e.dateStr;\n        this.toggle();\n      }\n      /*\n      eventAdd={this.addEventToState}\n      \n       eventRemove={this.deleteItem}\n       */\n      ,\n      eventsSet: this.handleEvents,\n      eventChange: this.handleEvents,\n      eventContent: renderEventContent\n      /* custom render function */\n      ,\n      eventClick: this.deleteItem // called after events are initialized/added/changed/removed\n\n      /* you can update a remote database when these fire:\n       */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      close: closeBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, \"Add New Event\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AddEditForm, {\n      addEventToState: this.addEventToState,\n      updateState: this.updateState,\n      toggle: this.toggle,\n      event: this.event,\n      dataFromParent: this.state.currentDay,\n      types: this.state.types,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n  renderSidebar() {\n    console.log(this.state.currentEvents + \"ÖNCESİ\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, \"Instructions\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, \"Select dates and you will be prompted to create a new event\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, \"Drag, drop, and resize events\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }, \"Click an event to delete it\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.weekendsVisible,\n      onChange: this.handleWeekendsToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    }), \"toggle weekends\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, \"All Events (\", this.state.currentEvents.length, \")\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }, this.state.currentEvents.map(renderSidebarEvent))));\n  }\n\n}\n\nfunction renderEventContent(eventInfo) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, eventInfo.event.extendedProps.description));\n}\n\nfunction renderSidebarEvent(event) {\n  console.log(event);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: event.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }, formatDate(event.start, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  })), /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, event.description));\n}","map":{"version":3,"sources":["/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/DemoApp.jsx"],"names":["React","FullCalendar","formatDate","dayGridPlugin","timeGridPlugin","interactionPlugin","Container","Row","Col","Modal","ModalHeader","ModalBody","DataTable","CSVLink","axios","ModalForm","AddEditForm","DemoApp","Component","state","modal","weekendsVisible","currentDay","types","currentEvents","newEvents","addEventToState","event","console","log","setState","prevState","toggle","updateState","eventIndex","findIndex","data","id","newArray","slice","deleteItem","confirmDelete","window","confirm","url","delete","then","item","deleteEventFromState","catch","err","response","updatedEvents","filter","handleWeekendsToggle","handleDateSelect","selectInfo","startStr","calendarApi","view","calendar","unselect","addEvent","start","end","endStr","allDay","handleEventClick","clickInfo","day","extendedProps","description","remove","handleEvents","events","componentDidMount","get","calendarEvents","error","render","renderCalendar","renderTahta","margin","float","marginRight","closeBtn","renderSidebar","left","center","right","e","dateStr","renderEventContent","props","className","length","map","renderSidebarEvent","eventInfo","year","month"],"mappings":"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","sourcesContent":["import React from 'react'\nimport FullCalendar, { formatDate } from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport { Container, Row, Col, Modal, ModalHeader, ModalBody } from 'reactstrap'\nimport DataTable from './components/DataTable'\nimport { CSVLink } from \"react-csv\"\nimport axios from 'axios';\nimport ModalForm from './components/Modal'\nimport AddEditForm from './components/FormAddEdit'\n\n\nexport default class DemoApp extends React.Component {\n\n\n    state = {\n        modal: false,\n        weekendsVisible: true,\n        currentDay: '',\n        types: [],\n        currentEvents: [],\n        newEvents:[]\n    }\n\n    /*  getEvents() {\n          fetch('https://localhost:5001/api/events/')\n              .then(response => response.json())\n              .then(currentEvents => this.setState({ currentEvents }))\n              .catch(err => console.log(err))\n      }\n      */\n\n    \n\n    addEventToState = (event) => {\n        console.log(this.state.currentEvents+\"BU ADD EVENT ÖNCESİ\")\n        this.setState(prevState => ({\n            currentEvents: [...prevState.currentEvents, event],\n            newEvents: [...prevState.newEvents, event]\n        }))\n        console.log(this.state.currentEvents + \"BU ADD EVENT SONRASI\")\n    }\n\n    toggle = () => {\n        this.setState({ modal: !this.state.modal });\n    };\n\n    updateState = (event) => {\n        const eventIndex = this.state.currentEvents.findIndex(data => data.id === event.id)\n        const newArray = [\n            // destructure all items from beginning to the indexed item\n            ...this.state.currentEvents.slice(0, eventIndex),\n            // add the updated item to the array\n            event,\n            // add the rest of the items to the array from the index after the replaced item\n            ...this.state.currentEvents.slice(eventIndex + 1)\n        ]\n        this.setState({ currentEvents: newArray })\n    }\n\n    deleteItem = id => {\n        let confirmDelete = window.confirm('Delete event forever?');\n        console.log(id.event.id)\n        if (confirmDelete) {\n            const url = \"https://localhost:5001/api/events/DeleteEventDetails/\" + id.event.id;\n\n            axios\n                .delete(url)\n                .then(item => {\n                    this.deleteEventFromState(id.event.id)\n                })\n                .catch(err => {\n                    console.log(err.response);\n                });\n        };\n    }\n\n    deleteEventFromState = (id) => {\n        const updatedEvents = this.state.currentEvents.filter(event => event.id !== id)\n        this.setState({ currentEvents: updatedEvents })\n    }\n\n    async componentDidMount() {\n        await axios.get('/api/events')\n            .then(response => {\n                this.setState({ currentEvents: response.data })\n                this.setState({ newEvents: response.data })\n                console.log({ calendarEvents: response.data })\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n\n        await axios.get('/api/types')\n            .then(response => {\n                this.setState({ types: response.data })\n                console.log({ types: response.data })\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    render() {\n\n        return ( this.renderCalendar())\n    }\n\n\n\n\nrenderTahta() {\n        return (\n            <div>\n\n                <Container className=\"DemoApp\">\n                    <Row>\n                        <Col>\n                            <h1 style={{ margin: \"20px 0\" }}>Event Database</h1>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <DataTable currentEvents={this.state.currentEvents} updateState={this.updateState} deleteEventFromState={this.deleteEventFromState} />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <CSVLink\n                                filename={\"db.csv\"}\n                                color=\"primary\"\n                                style={{ float: \"left\", marginRight: \"10px\" }}\n                                className=\"btn btn-primary\"\n                                data={this.state.currentEvents}>\n                                Download CSV\n                            </CSVLink>\n                            <ModalForm buttonLabel=\"Add Event\" addEventToState={this.addEventToState} />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n\n\n\n        )\n}\n\n    renderCalendar() {\n        \n\n        const closeBtn = <button className=\"close\" onClick={this.toggle}>&times;</button>\n        return (\n            <div className='demo-app'>\n                {this.renderSidebar()}\n               \n                <div className='demo-app-main'>\n                    <FullCalendar\n                        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                        headerToolbar={{\n                            left: 'prev,next today',\n                            center: 'title',\n                            right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                        }}\n                        initialView='dayGridMonth'\n                        editable={true}\n                        selectable={true}\n                        selectMirror={true}\n                        dayMaxEvents={true}\n                        weekends={this.state.weekendsVisible}\n                        /*initialEvents={INITIAL_EVENTS} */ /* alternatively, use the `events` setting to fetch from a feed*/\n                        events={this.state.newEvents}\n                        select={this.handleDateSelect}\n                        dateClick={(e) => {\n                            this.setState.currentDay = e.dateStr\n                            this.toggle()\n                        }}\n                        /*\n                        eventAdd={this.addEventToState}\n                        \n                         eventRemove={this.deleteItem}\n                         */\n                         eventsSet={this.handleEvents}\n\n\n                        eventChange={this.handleEvents}\n                       \n\n                        eventContent={renderEventContent} /* custom render function */\n                        eventClick={this.deleteItem}\n                         // called after events are initialized/added/changed/removed\n                        \n                    /* you can update a remote database when these fire:\n                     */\n\n                        \n                       \n                    \n                    />\n                    <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                        <ModalHeader toggle={this.toggle} close={closeBtn}>Add New Event</ModalHeader>\n                        <ModalBody>\n                            <AddEditForm\n                                \n                                addEventToState={this.addEventToState}\n                                updateState={this.updateState}\n                                toggle={this.toggle}\n                                event={this.event}\n                                dataFromParent={this.state.currentDay}\n                                types={this.state.types} />\n                        </ModalBody>\n                    </Modal>\n                </div>\n               \n                </div>\n             \n        )\n       \n\n            }\n        \n    renderSidebar() {\n        console.log(this.state.currentEvents + \"ÖNCESİ\")\n        return (\n            <div className='demo-app-sidebar'>\n                <div className='demo-app-sidebar-section'>\n                    <h2>Instructions</h2>\n                    <ul>\n                        <li>Select dates and you will be prompted to create a new event</li>\n                        <li>Drag, drop, and resize events</li>\n                        <li>Click an event to delete it</li>\n                    </ul>\n                </div>\n                <div className='demo-app-sidebar-section'>\n                    <label>\n                        <input\n                            type='checkbox'\n                            checked={this.state.weekendsVisible}\n                            onChange={this.handleWeekendsToggle}\n                        ></input>\n                        toggle weekends\n          </label>\n                </div>\n                <div className='demo-app-sidebar-section'>\n                    <h2>All Events ({this.state.currentEvents.length})</h2>\n                    <ul>\n                        {this.state.currentEvents.map(renderSidebarEvent)}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n\n    handleWeekendsToggle = () => {\n        this.setState({\n            weekendsVisible: !this.state.weekendsVisible\n        })\n    }\n\n    handleDateSelect = (selectInfo) => {\n        \n        console.log(selectInfo.startStr)\n        //let description = prompt('Please enter a new title for your event')\n        let calendarApi = selectInfo.view.calendar\n\n        calendarApi.unselect() // clear date selection\n\n        if (false) {\n            calendarApi.addEvent({\n\n                \n                start: selectInfo.startStr,\n                end: selectInfo.endStr,\n                allDay: true\n            })\n        }\n       /* this.addEventToState()*/\n    }\n\n  \n\n    \n    handleEventClick = (clickInfo) => {\n        console.log(clickInfo.event.day)\n\n        if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.extendedProps.description}'`)) {\n            \n            clickInfo.event.remove()\n        }\n    }\n   \n    handleEvents = (events) => {\n        this.setState({\n            newEvents: events\n        })\n    }\n\n}\n\nfunction renderEventContent(eventInfo) {\n    return (\n        \n        <>\n            <i>{eventInfo.event.extendedProps.description}</i>\n        </>\n    )\n}\nfunction renderSidebarEvent(event) {\n    console.log(event)\n    return (\n        <li key={event.id}>\n            <b>{formatDate(event.start, { year: 'numeric', month: 'short', day: 'numeric' })}</b>\n            <i>{event.description}</i>\n        </li>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}