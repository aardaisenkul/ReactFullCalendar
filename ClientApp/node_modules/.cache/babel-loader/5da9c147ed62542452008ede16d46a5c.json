{"ast":null,"code":"var _jsxFileName = \"/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/components/FormAddEdit.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass AddEditForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: 0,\n      first: '',\n      last: '',\n      email: '',\n      phone: '',\n      location: '',\n      hobby: ''\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitFormAdd = e => {\n      e.preventDefault();\n      fetch('http://localhost:3000/crud', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          first: this.state.first,\n          last: this.state.last,\n          email: this.state.email,\n          phone: this.state.phone,\n          location: this.state.location,\n          hobby: this.state.hobby\n        })\n      }).then(response => response.json()).then(item => {\n        if (Array.isArray(item)) {\n          this.props.addItemToState(item[0]);\n          this.props.toggle();\n        } else {\n          console.log('failure');\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.submitFormEdit = e => {\n      e.preventDefault();\n      fetch('http://localhost:3000/crud', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.id,\n          first: this.state.first,\n          last: this.state.last,\n          email: this.state.email,\n          phone: this.state.phone,\n          location: this.state.location,\n          hobby: this.state.hobby\n        })\n      }).then(response => response.json()).then(item => {\n        if (Array.isArray(item)) {\n          // console.log(item[0])\n          this.props.updateState(item[0]);\n          this.props.toggle();\n        } else {\n          console.log('failure');\n        }\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    // if item exists, populate the state with proper data\n    if (this.props.item) {\n      const {\n        id,\n        first,\n        last,\n        email,\n        phone,\n        location,\n        hobby\n      } = this.props.item;\n      this.setState({\n        id,\n        first,\n        last,\n        email,\n        phone,\n        location,\n        hobby\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.props.item ? this.submitFormEdit : this.submitFormAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"first\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"first\",\n      id: \"first\",\n      onChange: this.onChange,\n      value: this.state.first === null ? '' : this.state.first,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"last\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"last\",\n      id: \"last\",\n      onChange: this.onChange,\n      value: this.state.last === null ? '' : this.state.last,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      onChange: this.onChange,\n      value: this.state.email === null ? '' : this.state.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"phone\",\n      id: \"phone\",\n      onChange: this.onChange,\n      value: this.state.phone === null ? '' : this.state.phone,\n      placeholder: \"ex. 555-555-5555\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"location\",\n      id: \"location\",\n      onChange: this.onChange,\n      value: this.state.location === null ? '' : this.state.location,\n      placeholder: \"City, State\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"hobby\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \"Hobby\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"hobby\",\n      id: \"hobby\",\n      onChange: this.onChange,\n      value: this.state.hobby,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nexport default AddEditForm;","map":{"version":3,"sources":["/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/components/FormAddEdit.js"],"names":["React","Button","Form","FormGroup","Label","Input","AddEditForm","Component","state","id","first","last","email","phone","location","hobby","onChange","e","setState","target","name","value","submitFormAdd","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","item","Array","isArray","props","addItemToState","toggle","console","log","catch","err","submitFormEdit","updateState","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass AddEditForm extends React.Component {\n    state = {\n        id: 0,\n        first: '',\n        last: '',\n        email: '',\n        phone: '',\n        location: '',\n        hobby: ''\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    submitFormAdd = e => {\n        e.preventDefault()\n        fetch('http://localhost:3000/crud', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                first: this.state.first,\n                last: this.state.last,\n                email: this.state.email,\n                phone: this.state.phone,\n                location: this.state.location,\n                hobby: this.state.hobby\n            })\n        })\n            .then(response => response.json())\n            .then(item => {\n                if (Array.isArray(item)) {\n                    this.props.addItemToState(item[0])\n                    this.props.toggle()\n                } else {\n                    console.log('failure')\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    submitFormEdit = e => {\n        e.preventDefault()\n        fetch('http://localhost:3000/crud', {\n            method: 'put',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: this.state.id,\n                first: this.state.first,\n                last: this.state.last,\n                email: this.state.email,\n                phone: this.state.phone,\n                location: this.state.location,\n                hobby: this.state.hobby\n            })\n        })\n            .then(response => response.json())\n            .then(item => {\n                if (Array.isArray(item)) {\n                    // console.log(item[0])\n                    this.props.updateState(item[0])\n                    this.props.toggle()\n                } else {\n                    console.log('failure')\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    componentDidMount() {\n        // if item exists, populate the state with proper data\n        if (this.props.item) {\n            const { id, first, last, email, phone, location, hobby } = this.props.item\n            this.setState({ id, first, last, email, phone, location, hobby })\n        }\n    }\n\n    render() {\n        return (\n            <Form onSubmit={this.props.item ? this.submitFormEdit : this.submitFormAdd}>\n                <FormGroup>\n                    <Label for=\"first\">First Name</Label>\n                    <Input type=\"text\" name=\"first\" id=\"first\" onChange={this.onChange} value={this.state.first === null ? '' : this.state.first} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"last\">Last Name</Label>\n                    <Input type=\"text\" name=\"last\" id=\"last\" onChange={this.onChange} value={this.state.last === null ? '' : this.state.last} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"email\">Email</Label>\n                    <Input type=\"email\" name=\"email\" id=\"email\" onChange={this.onChange} value={this.state.email === null ? '' : this.state.email} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"phone\">Phone</Label>\n                    <Input type=\"text\" name=\"phone\" id=\"phone\" onChange={this.onChange} value={this.state.phone === null ? '' : this.state.phone} placeholder=\"ex. 555-555-5555\" />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"location\">Location</Label>\n                    <Input type=\"text\" name=\"location\" id=\"location\" onChange={this.onChange} value={this.state.location === null ? '' : this.state.location} placeholder=\"City, State\" />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"hobby\">Hobby</Label>\n                    <Input type=\"text\" name=\"hobby\" id=\"hobby\" onChange={this.onChange} value={this.state.hobby} />\n                </FormGroup>\n                <Button>Submit</Button>\n            </Form>\n        );\n    }\n}\n\nexport default AddEditForm"]},"metadata":{},"sourceType":"module"}