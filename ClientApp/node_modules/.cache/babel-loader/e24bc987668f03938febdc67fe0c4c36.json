{"ast":null,"code":"var _jsxFileName = \"/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/DemoApp.jsx\";\nimport React from 'react';\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { INITIAL_EVENTS, createEventId } from './event-utils';\nexport default class DemoApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weekendsVisible: true,\n      currentEvents: []\n    };\n\n    this.handleWeekendsToggle = () => {\n      this.setState({\n        weekendsVisible: !this.state.weekendsVisible\n      });\n    };\n\n    this.handleDateSelect = selectInfo => {\n      let title = prompt('Please enter a new title for your event');\n      let calendarApi = selectInfo.view.calendar;\n      calendarApi.unselect(); // clear date selection\n\n      if (title) {\n        calendarApi.addEvent({\n          id: createEventId(),\n          title,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: selectInfo.allDay\n        });\n      }\n    };\n\n    this.handleEventClick = clickInfo => {\n      if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n        clickInfo.event.remove();\n      }\n    };\n\n    this.handleEvents = events => {\n      this.setState({\n        currentEvents: events\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, this.renderSidebar(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n      },\n      initialView: \"dayGridMonth\",\n      editable: true,\n      selectable: true,\n      selectMirror: true,\n      dayMaxEvents: true,\n      weekends: this.state.weekendsVisible,\n      initialEvents: INITIAL_EVENTS // alternatively, use the `events` setting to fetch from a feed\n      ,\n      select: this.handleDateSelect,\n      eventContent: renderEventContent // custom render function\n      ,\n      eventClick: this.handleEventClick,\n      eventsSet: this.handleEvents // called after events are initialized/added/changed/removed\n\n      /* you can update a remote database when these fire:\n      eventAdd={function(){}}\n      eventChange={function(){}}\n      eventRemove={function(){}}\n      */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  renderSidebar() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"Instructions\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, \"Select dates and you will be prompted to create a new event\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"Drag, drop, and resize events\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"Click an event to delete it\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.weekendsVisible,\n      onChange: this.handleWeekendsToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }), \"toggle weekends\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"All Events (\", this.state.currentEvents.length, \")\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, this.state.currentEvents.map(renderSidebarEvent))));\n  }\n\n}\n\nfunction renderEventContent(eventInfo) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, eventInfo.timeText), /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, eventInfo.event.title));\n}\n\nfunction renderSidebarEvent(event) {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: event.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, formatDate(event.start, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  })), /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, event.title));\n}","map":{"version":3,"sources":["/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/DemoApp.jsx"],"names":["React","FullCalendar","formatDate","dayGridPlugin","timeGridPlugin","interactionPlugin","INITIAL_EVENTS","createEventId","DemoApp","Component","state","weekendsVisible","currentEvents","handleWeekendsToggle","setState","handleDateSelect","selectInfo","title","prompt","calendarApi","view","calendar","unselect","addEvent","id","start","startStr","end","endStr","allDay","handleEventClick","clickInfo","window","confirm","event","remove","handleEvents","events","render","renderSidebar","left","center","right","renderEventContent","length","map","renderSidebarEvent","eventInfo","timeText","year","month","day"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,IAAuBC,UAAvB,QAAyC,qBAAzC;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,eAA9C;AAEA,eAAe,MAAMC,OAAN,SAAsBR,KAAK,CAACS,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEjDC,KAFiD,GAEzC;AACJC,MAAAA,eAAe,EAAE,IADb;AAEJC,MAAAA,aAAa,EAAE;AAFX,KAFyC;;AAAA,SAwEjDC,oBAxEiD,GAwE1B,MAAM;AACzB,WAAKC,QAAL,CAAc;AACVH,QAAAA,eAAe,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADnB,OAAd;AAGH,KA5EgD;;AAAA,SA8EjDI,gBA9EiD,GA8E7BC,UAAD,IAAgB;AAC/B,UAAIC,KAAK,GAAGC,MAAM,CAAC,yCAAD,CAAlB;AAEA,UAAIC,WAAW,GAAGH,UAAU,CAACI,IAAX,CAAgBC,QAAlC;AAEAF,MAAAA,WAAW,CAACG,QAAZ,GAL+B,CAKR;;AAEvB,UAAIL,KAAJ,EAAW;AACPE,QAAAA,WAAW,CAACI,QAAZ,CAAqB;AACjBC,UAAAA,EAAE,EAAEjB,aAAa,EADA;AAEjBU,UAAAA,KAFiB;AAGjBQ,UAAAA,KAAK,EAAET,UAAU,CAACU,QAHD;AAIjBC,UAAAA,GAAG,EAAEX,UAAU,CAACY,MAJC;AAKjBC,UAAAA,MAAM,EAAEb,UAAU,CAACa;AALF,SAArB;AAOH;AACJ,KA9FgD;;AAAA,SAgGjDC,gBAhGiD,GAgG7BC,SAAD,IAAe;AAC9B,UAAIC,MAAM,CAACC,OAAP,CAAgB,8CAA6CF,SAAS,CAACG,KAAV,CAAgBjB,KAAM,GAAnF,CAAJ,EAA4F;AACxFc,QAAAA,SAAS,CAACG,KAAV,CAAgBC,MAAhB;AACH;AACJ,KApGgD;;AAAA,SAsGjDC,YAtGiD,GAsGjCC,MAAD,IAAY;AACvB,WAAKvB,QAAL,CAAc;AACVF,QAAAA,aAAa,EAAEyB;AADL,OAAd;AAGH,KA1GgD;AAAA;;AAOjDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,aAAL,EADL,eAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AACI,MAAA,OAAO,EAAE,CAACpC,aAAD,EAAgBC,cAAhB,EAAgCC,iBAAhC,CADb;AAEI,MAAA,aAAa,EAAE;AACXmC,QAAAA,IAAI,EAAE,iBADK;AAEXC,QAAAA,MAAM,EAAE,OAFG;AAGXC,QAAAA,KAAK,EAAE;AAHI,OAFnB;AAOI,MAAA,WAAW,EAAC,cAPhB;AAQI,MAAA,QAAQ,EAAE,IARd;AASI,MAAA,UAAU,EAAE,IAThB;AAUI,MAAA,YAAY,EAAE,IAVlB;AAWI,MAAA,YAAY,EAAE,IAXlB;AAYI,MAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWC,eAZzB;AAaI,MAAA,aAAa,EAAEL,cAbnB,CAamC;AAbnC;AAcI,MAAA,MAAM,EAAE,KAAKS,gBAdjB;AAeI,MAAA,YAAY,EAAE4B,kBAflB,CAesC;AAftC;AAgBI,MAAA,UAAU,EAAE,KAAKb,gBAhBrB;AAiBI,MAAA,SAAS,EAAE,KAAKM,YAjBpB,CAiBkC;;AAClC;;;;;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ;AA+BH;;AAEDG,EAAAA,aAAa,GAAG;AACZ,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAHJ,CAFJ,CADJ,eASI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,OAAO,EAAE,KAAK7B,KAAL,CAAWC,eAFxB;AAGI,MAAA,QAAQ,EAAE,KAAKE,oBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,oBADJ,CATJ,eAmBI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiB,KAAKH,KAAL,CAAWE,aAAX,CAAyBgC,MAA1C,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKlC,KAAL,CAAWE,aAAX,CAAyBiC,GAAzB,CAA6BC,kBAA7B,CADL,CAFJ,CAnBJ,CADJ;AA4BH;;AAtEgD;;AA8GrD,SAASH,kBAAT,CAA4BI,SAA5B,EAAuC;AACnC,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,SAAS,CAACC,QAAd,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,SAAS,CAACb,KAAV,CAAgBjB,KAApB,CAFJ,CADJ;AAOH;;AAED,SAAS6B,kBAAT,CAA4BZ,KAA5B,EAAmC;AAC/B,sBACI;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACV,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAItB,UAAU,CAACgC,KAAK,CAACT,KAAP,EAAc;AAAEwB,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,KAAK,EAAE,OAA1B;AAAmCC,IAAAA,GAAG,EAAE;AAAxC,GAAd,CAAd,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIjB,KAAK,CAACjB,KAAV,CAFJ,CADJ;AAMH","sourcesContent":["import React from 'react'\nimport FullCalendar, { formatDate } from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport { INITIAL_EVENTS, createEventId } from './event-utils'\n\nexport default class DemoApp extends React.Component {\n\n    state = {\n        weekendsVisible: true,\n        currentEvents: []\n    }\n\n    render() {\n        return (\n            <div className='demo-app'>\n                {this.renderSidebar()}\n                <div className='demo-app-main'>\n                    <FullCalendar\n                        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                        headerToolbar={{\n                            left: 'prev,next today',\n                            center: 'title',\n                            right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                        }}\n                        initialView='dayGridMonth'\n                        editable={true}\n                        selectable={true}\n                        selectMirror={true}\n                        dayMaxEvents={true}\n                        weekends={this.state.weekendsVisible}\n                        initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n                        select={this.handleDateSelect}\n                        eventContent={renderEventContent} // custom render function\n                        eventClick={this.handleEventClick}\n                        eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n                    /* you can update a remote database when these fire:\n                    eventAdd={function(){}}\n                    eventChange={function(){}}\n                    eventRemove={function(){}}\n                    */\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    renderSidebar() {\n        return (\n            <div className='demo-app-sidebar'>\n                <div className='demo-app-sidebar-section'>\n                    <h2>Instructions</h2>\n                    <ul>\n                        <li>Select dates and you will be prompted to create a new event</li>\n                        <li>Drag, drop, and resize events</li>\n                        <li>Click an event to delete it</li>\n                    </ul>\n                </div>\n                <div className='demo-app-sidebar-section'>\n                    <label>\n                        <input\n                            type='checkbox'\n                            checked={this.state.weekendsVisible}\n                            onChange={this.handleWeekendsToggle}\n                        ></input>\n                        toggle weekends\n          </label>\n                </div>\n                <div className='demo-app-sidebar-section'>\n                    <h2>All Events ({this.state.currentEvents.length})</h2>\n                    <ul>\n                        {this.state.currentEvents.map(renderSidebarEvent)}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n\n    handleWeekendsToggle = () => {\n        this.setState({\n            weekendsVisible: !this.state.weekendsVisible\n        })\n    }\n\n    handleDateSelect = (selectInfo) => {\n        let title = prompt('Please enter a new title for your event')\n\n        let calendarApi = selectInfo.view.calendar\n\n        calendarApi.unselect() // clear date selection\n\n        if (title) {\n            calendarApi.addEvent({\n                id: createEventId(),\n                title,\n                start: selectInfo.startStr,\n                end: selectInfo.endStr,\n                allDay: selectInfo.allDay\n            })\n        }\n    }\n\n    handleEventClick = (clickInfo) => {\n        if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n            clickInfo.event.remove()\n        }\n    }\n\n    handleEvents = (events) => {\n        this.setState({\n            currentEvents: events\n        })\n    }\n\n}\n\nfunction renderEventContent(eventInfo) {\n    return (\n        <>\n            <b>{eventInfo.timeText}</b>\n            <i>{eventInfo.event.title}</i>\n\n        </>\n    )\n}\n\nfunction renderSidebarEvent(event) {\n    return (\n        <li key={event.id}>\n            <b>{formatDate(event.start, { year: 'numeric', month: 'short', day: 'numeric' })}</b>\n            <i>{event.title}</i>\n        </li>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}