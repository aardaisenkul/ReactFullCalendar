{"ast":null,"code":"var _jsxFileName = \"/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/DemoApp.jsx\";\nimport React from 'react';\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { Container, Row, Col } from 'reactstrap';\nimport DataTable from './components/DataTable';\nimport { CSVLink } from \"react-csv\";\nimport axios from 'axios';\nimport ModalForm from './components/Modal';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js'; //jquery, popper.js libraries for bootstrap modal\n\nimport 'jquery/dist/jquery.min.js';\nimport 'popper.js/dist/umd/popper.min.js';\nimport $ from 'jquery';\nexport default class DemoApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      weekendsVisible: true,\n      currentEvents: []\n    };\n\n    this.addEventToState = event => {\n      this.setState(prevState => ({\n        currentEvents: [...prevState.currentEvents, event]\n      }));\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.updateState = event => {\n      const eventIndex = this.state.currentEvents.findIndex(data => data.id === event.id);\n      const newArray = [// destructure all items from beginning to the indexed item\n      ...this.state.currentEvents.slice(0, eventIndex), // add the updated item to the array\n      event, // add the rest of the items to the array from the index after the replaced item\n      ...this.state.currentEvents.slice(eventIndex + 1)];\n      this.setState({\n        currentEvents: newArray\n      });\n    };\n\n    this.deleteEventFromState = id => {\n      const updatedEvents = this.state.currentEvents.filter(event => event.id !== id);\n      this.setState({\n        currentEvents: updatedEvents\n      });\n    };\n\n    this.handleWeekendsToggle = () => {\n      this.setState({\n        weekendsVisible: !this.state.weekendsVisible\n      });\n    };\n\n    this.handleDateSelect = selectInfo => {\n      console.log(selectInfo.startStr); //let description = prompt('Please enter a new title for your event')\n\n      let calendarApi = selectInfo.view.calendar;\n      calendarApi.unselect(); // clear date selection\n\n      if (false) {\n        calendarApi.addEvent({\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: true\n        });\n      }\n      /* this.addEventToState()*/\n\n    };\n\n    this.handleEventClick = clickInfo => {\n      console.log(clickInfo.event.day);\n\n      if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.extendedProps.description}'`)) {\n        clickInfo.event.remove();\n      }\n    };\n\n    this.handleEvents = events => {\n      this.setState({\n        currentEvents: events\n      });\n    };\n  }\n\n  async componentDidMount() {\n    await axios.get('/api/events').then(response => {\n      this.setState({\n        currentEvents: response.data\n      });\n      console.log({\n        calendarEvents: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return this.renderCalendar();\n  }\n\n  renderTahta() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"DemoApp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        margin: \"20px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, \"Event Database\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      currentEvents: this.state.currentEvents,\n      updateState: this.updateState,\n      deleteEventFromState: this.deleteEventFromState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CSVLink, {\n      filename: \"db.csv\",\n      color: \"primary\",\n      style: {\n        float: \"left\",\n        marginRight: \"10px\"\n      },\n      className: \"btn btn-primary\",\n      data: this.state.currentEvents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, \"Download CSV\"), /*#__PURE__*/React.createElement(ModalForm, {\n      buttonLabel: \"Add Event\",\n      addEventToState: this.addEventToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n  renderCalendar() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalForm, {\n      buttonLabel: \"ananabas\",\n      addEventToState: this.addEventToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n      },\n      initialView: \"dayGridMonth\",\n      editable: true,\n      selectable: true,\n      selectMirror: true,\n      dayMaxEvents: true,\n      weekends: this.state.weekendsVisible\n      /*initialEvents={INITIAL_EVENTS} */\n\n      /* alternatively, use the `events` setting to fetch from a feed*/\n      ,\n      events: \"api/events/\",\n      select: this.handleDateSelect,\n      dateClick: function (arg) {\n        $(\"#myModal\").modal(\"show\");\n        $(\".modal-body\").html(\"<h3>\" + \"ANKARAGÜCÜ\" + \"</h3>\");\n      },\n      eventContent: renderEventContent\n      /* custom render function */\n      ,\n      eventClick: this.handleEventClick,\n      eventsSet: this.handleEvents // called after events are initialized/added/changed/removed\n\n      /* you can update a remote database when these fire: eventAdd={function(){}} eventChange={function(){}}eventRemove={function(){}}*/\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal\",\n      id: \"myModal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      class: \"modal-title align-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, \"Date is Below\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"close\",\n      \"data-dismiss\": \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-danger\",\n      \"data-dismiss\": \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, \"Close\"))))));\n  }\n\n  renderSidebar() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, \"Instructions\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, \"Select dates and you will be prompted to create a new event\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }, \"Drag, drop, and resize events\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, \"Click an event to delete it\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.weekendsVisible,\n      onChange: this.handleWeekendsToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }), \"toggle weekends\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, \"All Events (\", this.state.currentEvents.length, \")\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, this.state.currentEvents.map(renderSidebarEvent))));\n  }\n\n}\n\nfunction renderEventContent(eventInfo) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, eventInfo.event.extendedProps.description));\n}\n\nfunction renderSidebarEvent(event) {\n  console.log(event);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: event.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, formatDate(event.start, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  })), /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, event.description));\n}","map":{"version":3,"sources":["/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/DemoApp.jsx"],"names":["React","FullCalendar","formatDate","dayGridPlugin","timeGridPlugin","interactionPlugin","Container","Row","Col","DataTable","CSVLink","axios","ModalForm","ReactDOM","$","DemoApp","Component","state","modal","weekendsVisible","currentEvents","addEventToState","event","setState","prevState","toggle","updateState","eventIndex","findIndex","data","id","newArray","slice","deleteEventFromState","updatedEvents","filter","handleWeekendsToggle","handleDateSelect","selectInfo","console","log","startStr","calendarApi","view","calendar","unselect","addEvent","start","end","endStr","allDay","handleEventClick","clickInfo","day","window","confirm","extendedProps","description","remove","handleEvents","events","componentDidMount","get","then","response","calendarEvents","catch","error","render","renderCalendar","renderTahta","margin","float","marginRight","left","center","right","arg","html","renderEventContent","renderSidebar","length","map","renderSidebarEvent","eventInfo","year","month"],"mappings":"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","sourcesContent":["import React from 'react'\nimport FullCalendar, { formatDate } from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport { Container, Row, Col } from 'reactstrap'\nimport DataTable from './components/DataTable'\nimport { CSVLink } from \"react-csv\"\nimport axios from 'axios';\nimport ModalForm from './components/Modal'\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n//jquery, popper.js libraries for bootstrap modal\nimport 'jquery/dist/jquery.min.js';\nimport 'popper.js/dist/umd/popper.min.js'\nimport $ from 'jquery';\n\n\nexport default class DemoApp extends React.Component {\n\n\n    state = {\n        modal: false,\n        weekendsVisible: true,\n        currentEvents: []\n    }\n\n    /*  getEvents() {\n          fetch('https://localhost:5001/api/events/')\n              .then(response => response.json())\n              .then(currentEvents => this.setState({ currentEvents }))\n              .catch(err => console.log(err))\n      }\n      */\n\n    addEventToState = (event) => {\n        this.setState(prevState => ({\n            currentEvents: [...prevState.currentEvents, event]\n        }))\n    }\n\n    toggle = () => {\n        this.setState({ modal: !this.state.modal });\n    };\n\n    updateState = (event) => {\n        const eventIndex = this.state.currentEvents.findIndex(data => data.id === event.id)\n        const newArray = [\n            // destructure all items from beginning to the indexed item\n            ...this.state.currentEvents.slice(0, eventIndex),\n            // add the updated item to the array\n            event,\n            // add the rest of the items to the array from the index after the replaced item\n            ...this.state.currentEvents.slice(eventIndex + 1)\n        ]\n        this.setState({ currentEvents: newArray })\n    }\n\n    deleteEventFromState = (id) => {\n        const updatedEvents = this.state.currentEvents.filter(event => event.id !== id)\n        this.setState({ currentEvents: updatedEvents })\n    }\n\n    async componentDidMount() {\n        await axios.get('/api/events')\n            .then(response => {\n                this.setState({ currentEvents: response.data })\n                console.log({ calendarEvents: response.data })\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    render() {\n\n        return ( this.renderCalendar())\n    }\n\n\n\n\nrenderTahta() {\n        return (\n            <div>\n\n                <Container className=\"DemoApp\">\n                    <Row>\n                        <Col>\n                            <h1 style={{ margin: \"20px 0\" }}>Event Database</h1>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <DataTable currentEvents={this.state.currentEvents} updateState={this.updateState} deleteEventFromState={this.deleteEventFromState} />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <CSVLink\n                                filename={\"db.csv\"}\n                                color=\"primary\"\n                                style={{ float: \"left\", marginRight: \"10px\" }}\n                                className=\"btn btn-primary\"\n                                data={this.state.currentEvents}>\n                                Download CSV\n                            </CSVLink>\n                            <ModalForm buttonLabel=\"Add Event\" addEventToState={this.addEventToState} />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n\n\n\n        )\n}\n\n    renderCalendar() {\n        return (\n            <div className='demo-app'>\n                {/*this.renderSidebar()*/}\n                <ModalForm buttonLabel=\"ananabas\" addEventToState={this.addEventToState}  />\n                <div className='demo-app-main'>\n                    <FullCalendar\n                        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                        headerToolbar={{\n                            left: 'prev,next today',\n                            center: 'title',\n                            right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                        }}\n                        initialView='dayGridMonth'\n                        editable={true}\n                        selectable={true}\n                        selectMirror={true}\n                        dayMaxEvents={true}\n                        weekends={this.state.weekendsVisible}\n                        /*initialEvents={INITIAL_EVENTS} */ /* alternatively, use the `events` setting to fetch from a feed*/\n                        events='api/events/'\n                        select={this.handleDateSelect}\n                        dateClick={function (arg) {\n                            $(\"#myModal\").modal(\"show\");\n                            $(\".modal-body\").html(\"<h3>\" + \"ANKARAGÜCÜ\" + \"</h3>\");\n                        }}\n                        eventContent={renderEventContent} /* custom render function */\n                        eventClick={this.handleEventClick}\n                        \n                        eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n                        \n                    /* you can update a remote database when these fire: eventAdd={function(){}} eventChange={function(){}}eventRemove={function(){}}*/\n\n                        \n                       \n                    \n                    />\n\n                </div>\n                <div class=\"modal\" id=\"myModal\">\n                    <div class=\"modal-dialog\">\n                        <div class=\"modal-content\">\n\n                            <div class=\"modal-header\">\n                                <h4 class=\"modal-title align-center\">Date is Below</h4>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                            </div>\n                           \n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                </div>\n             \n        )\n       \n\n            }\n        \n    renderSidebar() {\n        return (\n            <div className='demo-app-sidebar'>\n                <div className='demo-app-sidebar-section'>\n                    <h2>Instructions</h2>\n                    <ul>\n                        <li>Select dates and you will be prompted to create a new event</li>\n                        <li>Drag, drop, and resize events</li>\n                        <li>Click an event to delete it</li>\n                    </ul>\n                </div>\n                <div className='demo-app-sidebar-section'>\n                    <label>\n                        <input\n                            type='checkbox'\n                            checked={this.state.weekendsVisible}\n                            onChange={this.handleWeekendsToggle}\n                        ></input>\n                        toggle weekends\n          </label>\n                </div>\n                <div className='demo-app-sidebar-section'>\n                    <h2>All Events ({this.state.currentEvents.length})</h2>\n                    <ul>\n                        {this.state.currentEvents.map(renderSidebarEvent)}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n\n    handleWeekendsToggle = () => {\n        this.setState({\n            weekendsVisible: !this.state.weekendsVisible\n        })\n    }\n\n    handleDateSelect = (selectInfo) => {\n        \n        console.log(selectInfo.startStr)\n        //let description = prompt('Please enter a new title for your event')\n        let calendarApi = selectInfo.view.calendar\n\n        calendarApi.unselect() // clear date selection\n\n        if (false) {\n            calendarApi.addEvent({\n\n                \n                start: selectInfo.startStr,\n                end: selectInfo.endStr,\n                allDay: true\n            })\n        }\n       /* this.addEventToState()*/\n    }\n\n  \n\n    \n    handleEventClick = (clickInfo) => {\n        console.log(clickInfo.event.day)\n\n        if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.extendedProps.description}'`)) {\n            \n            clickInfo.event.remove()\n        }\n    }\n   \n    handleEvents = (events) => {\n        this.setState({\n            currentEvents: events\n        })\n    }\n\n}\n\nfunction renderEventContent(eventInfo) {\n    return (\n        \n        <>\n            \n            \n            <i>{eventInfo.event.extendedProps.description}</i>\n        </>\n    )\n}\nfunction renderSidebarEvent(event) {\n    console.log(event)\n    return (\n        <li key={event.id}>\n            <b>{formatDate(event.start, { year: 'numeric', month: 'short', day: 'numeric' })}</b>\n            <i>{event.description}</i>\n        </li>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}