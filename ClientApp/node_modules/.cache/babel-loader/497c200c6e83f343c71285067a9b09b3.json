{"ast":null,"code":"var _jsxFileName = \"/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/components/FormAddEdit.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport axios from 'axios';\n\nclass AddEditForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      customer: '',\n      project: '',\n      type: '',\n      hours: 0,\n      description: '',\n      startdate: '',\n      enddate: ''\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitFormAdd = e => {\n      e.preventDefault();\n      axios.post('http://localhost:5001/api/events/', {\n        customer: this.state.customer,\n        project: this.state.project,\n        type: this.state.type,\n        hours: this.state.hours,\n        startdate: this.state.startdate,\n        enddate: this.state.enddate,\n        description: this.state.description\n      }).then(event => {\n        if (Array.isArray(event)) {\n          this.props.addEventToState(event[0]);\n          this.props.toggle();\n        } else {\n          console.log('failure');\n        }\n      }).catch(err => console.log(err.response()));\n    };\n\n    this.submitFormEdit = e => {\n      e.preventDefault();\n      fetch('http://localhost:5001/api/events/', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          customer: this.state.customer,\n          project: this.state.project,\n          type: this.state.type,\n          hours: this.state.hours,\n          startdate: this.state.startdate,\n          enddate: this.state.enddate,\n          description: this.state.description\n        })\n      }).then(response => response.json()).then(event => {\n        if (Array.isArray(event)) {\n          // console.log(item[0])\n          this.props.updateState(event[0]);\n          this.props.toggle();\n        } else {\n          console.log('failure');\n        }\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    // if item exists, populate the state with proper data\n    if (this.props.event) {\n      const {\n        id,\n        customer,\n        project,\n        type,\n        hours,\n        startdate,\n        enddate,\n        description\n      } = this.props.event;\n      this.setState({\n        id,\n        customer,\n        project,\n        type,\n        hours,\n        startdate,\n        enddate,\n        description\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.props.event ? this.submitFormEdit : this.submitFormAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"customer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"customer\",\n      id: \"customer\",\n      onChange: this.onChange,\n      value: this.state.customer === null ? '' : this.state.customer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"project\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Project\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"project\",\n      id: \"project\",\n      onChange: this.onChange,\n      value: this.state.project === null ? '' : this.state.project,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"type\",\n      id: \"type\",\n      onChange: this.onChange,\n      value: this.state.type === null ? '' : this.state.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"hours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"Hours\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      name: \"hours\",\n      id: \"hours\",\n      onChange: this.onChange,\n      value: this.state.hours === null ? '' : this.state.hours,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"description\",\n      id: \"description\",\n      onChange: this.onChange,\n      value: this.state.description === null ? '' : this.state.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"startdate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, \"StartDate\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"datetime-local\",\n      name: \"startdate\",\n      id: \"startdate\",\n      onChange: this.onChange,\n      value: this.state.startdate,\n      placeholder: \"2020-11-29T19:10:25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"enddate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \"EndDate\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"datetime-local\",\n      name: \"enddate\",\n      id: \"enddate\",\n      onChange: this.onChange,\n      value: this.state.enddate,\n      placeholder: \"2020-11-29T19:10:25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nexport default AddEditForm;","map":{"version":3,"sources":["/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/components/FormAddEdit.js"],"names":["React","Button","Form","FormGroup","Label","Input","axios","AddEditForm","Component","state","customer","project","type","hours","description","startdate","enddate","onChange","e","setState","target","name","value","submitFormAdd","preventDefault","post","then","event","Array","isArray","props","addEventToState","toggle","console","log","catch","err","response","submitFormEdit","fetch","method","headers","body","JSON","stringify","json","updateState","componentDidMount","id","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport axios from 'axios';\n\nclass AddEditForm extends React.Component {\n    state = {\n        customer: '',\n        project: '',\n        type: '',\n        hours: 0,\n        description: '',\n        startdate: '',\n        enddate:'',\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    submitFormAdd = e => {\n        e.preventDefault()\n        axios.post('http://localhost:5001/api/events/', {\n                customer: this.state.customer,\n                project: this.state.project,\n                type: this.state.type,\n                hours: this.state.hours,\n                startdate: this.state.startdate,\n                enddate: this.state.enddate,\n                description: this.state.description\n            })\n            .then(event => {\n                if (Array.isArray(event)) {\n                    this.props.addEventToState(event[0])\n                    this.props.toggle()\n                } else {\n                    console.log('failure')\n                }\n            })\n            .catch(err => console.log(err.response()))\n    }\n\n    submitFormEdit = e => {\n        e.preventDefault()\n        fetch('http://localhost:5001/api/events/', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                customer: this.state.customer,\n                project: this.state.project,\n                type: this.state.type,\n                hours: this.state.hours,\n                startdate: this.state.startdate,\n                enddate: this.state.enddate,\n                description: this.state.description\n            })\n        })\n            .then(response => response.json())\n            .then(event => {\n                if (Array.isArray(event)) {\n                    // console.log(item[0])\n                    this.props.updateState(event[0])\n                    this.props.toggle()\n                } else {\n                    console.log('failure')\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    componentDidMount() {\n        // if item exists, populate the state with proper data\n        if (this.props.event) {\n            const { id, customer, project, type, hours, startdate, enddate, description } = this.props.event\n            this.setState({ id, customer, project, type, hours, startdate, enddate, description })\n        }\n    }\n\n    render() {\n        return (\n            <Form onSubmit={this.props.event ? this.submitFormEdit : this.submitFormAdd}>\n                <FormGroup>\n                    <Label for=\"customer\">Customer</Label>\n                    <Input type=\"text\" name=\"customer\" id=\"customer\" onChange={this.onChange} value={this.state.customer === null ? '' : this.state.customer} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"project\">Project</Label>\n                    <Input type=\"text\" name=\"project\" id=\"project\" onChange={this.onChange} value={this.state.project === null ? '' : this.state.project} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"type\">Type</Label>\n                    <Input type=\"text\" name=\"type\" id=\"type\" onChange={this.onChange} value={this.state.type === null ? '' : this.state.type} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"hours\">Hours</Label>\n                    <Input type=\"number\" name=\"hours\" id=\"hours\" onChange={this.onChange} value={this.state.hours === null ? '' : this.state.hours} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"description\">Description</Label>\n                    <Input type=\"text\" name=\"description\" id=\"description\" onChange={this.onChange} value={this.state.description === null ? '' : this.state.description} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"startdate\">StartDate</Label>\n                    <Input type=\"datetime-local\" name=\"startdate\" id=\"startdate\" onChange={this.onChange} value={this.state.startdate} placeholder= \"2020-11-29T19:10:25\" />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"enddate\">EndDate</Label>\n                    <Input type=\"datetime-local\" name=\"enddate\" id=\"enddate\" onChange={this.onChange} value={this.state.enddate} placeholder= \"2020-11-29T19:10:25\" />\n                </FormGroup>\n                <Button>Submit</Button>\n            </Form>\n        );\n    }\n}\n\nexport default AddEditForm"]},"metadata":{},"sourceType":"module"}