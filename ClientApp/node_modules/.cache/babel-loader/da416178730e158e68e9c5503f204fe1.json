{"ast":null,"code":"var _jsxFileName = \"/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/DemoApp.jsx\";\nimport React from 'react';\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { INITIAL_EVENTS, createEventId } from './event-utils';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { Container, Row, Col } from 'reactstrap';\nimport DataTable from './components/DataTable';\nimport { CSVLink } from \"react-csv\";\nimport axios from 'axios';\nimport ModalForm from './components/Modal';\nimport \"@fullcalendar/common/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nexport default class DemoApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.calendarComponentRef = React.createRef();\n    this.state = {\n      modal: false,\n      weekendsVisible: true,\n      currentEvents: []\n    };\n\n    this.addEventToState = event => {\n      this.setState(prevState => ({\n        currentEvents: [...prevState.currentEvents, event]\n      }));\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.updateState = event => {\n      const eventIndex = this.state.currentEvents.findIndex(data => data.id === event.id);\n      const newArray = [// destructure all items from beginning to the indexed item\n      ...this.state.currentEvents.slice(0, eventIndex), // add the updated item to the array\n      event, // add the rest of the items to the array from the index after the replaced item\n      ...this.state.currentEvents.slice(eventIndex + 1)];\n      this.setState({\n        currentEvents: newArray\n      });\n    };\n\n    this.deleteEventFromState = id => {\n      const updatedEvents = this.state.currentEvents.filter(event => event.id !== id);\n      this.setState({\n        currentEvents: updatedEvents\n      });\n    };\n\n    this.handleWeekendsToggle = () => {\n      this.setState({\n        weekendsVisible: !this.state.weekendsVisible\n      });\n    };\n\n    this.handleDateSelect = selectInfo => {\n      let title = prompt('Please enter a new title for your event');\n      let calendarApi = selectInfo.view.calendar;\n      calendarApi.unselect(); // clear date selection\n\n      if (title) {\n        calendarApi.addEvent({\n          id: 5,\n          customer: \"Kesgisu\",\n          project: \"TelekomTakım\",\n          type: \"Bilgisayar\",\n          hours: \"5\",\n          startdate: selectInfo.startStr + 'T00:00:00',\n          enddate: selectInfo.endStr + 'T00:00:00',\n          description: \"başardın\"\n        });\n      }\n      /* this.addEventToState()*/\n\n    };\n\n    this.handleEventClick = ({\n      currentEvents,\n      el\n    }) => {\n      this.toggle();\n      this.setState({\n        currentEvents\n      });\n    };\n\n    this.handleEvents = events => {\n      this.setState({\n        currentEvents: events\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/events').then(response => {\n      this.setState({\n        currentEvents: response.data\n      });\n      console.log({\n        calendarEvents: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-main\",\n      style: {\n        marginTop: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      headerToolbar: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n      },\n      ref: this.calendarComponentRef,\n      weekends: this.state.weekendsVisible,\n      events: this.state.currentEvents,\n      eventClick: this.handleEventClick,\n      nowIndicator: \"true\",\n      height: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"EVENT TITLE SHOULD GO HERE: \", this.state.currentEvents.title), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, \"EVENT INFO SHOULD GO HERE: \", this.state.currentEvents.start)), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \"Do Something\"), \" \", /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, \"Cancel\")))));\n  }\n\n  renderTahta() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"DemoApp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        margin: \"20px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, \"Event Database\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      currentEvents: this.state.currentEvents,\n      updateState: this.updateState,\n      deleteEventFromState: this.deleteEventFromState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CSVLink, {\n      filename: \"db.csv\",\n      color: \"primary\",\n      style: {\n        float: \"left\",\n        marginRight: \"10px\"\n      },\n      className: \"btn btn-primary\",\n      data: this.state.currentEvents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, \"Download CSV\"), /*#__PURE__*/React.createElement(ModalForm, {\n      buttonLabel: \"Add Event\",\n      addEventToState: this.addEventToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n  renderCalendar() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, this.renderSidebar(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n      },\n      initialView: \"dayGridMonth\",\n      editable: true,\n      selectable: true,\n      selectMirror: true,\n      dayMaxEvents: true,\n      weekends: this.state.weekendsVisible,\n      initialEvents: INITIAL_EVENTS // alternatively, use the `events` setting to fetch from a feed\n      ,\n      select: this.handleDateSelect,\n      eventContent: renderEventContent // custom render function\n      ,\n      eventClick: this.handleEventClick,\n      eventsSet: this.handleEvents // called after events are initialized/added/changed/removed\n\n      /* you can update a remote database when these fire:\n      eventAdd={function(){}}\n      /*     eventChange={function(){}}\n      eventRemove={function(){}}\n      */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  renderSidebar() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, \"Instructions\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, \"Select dates and you will be prompted to create a new event\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }, \"Drag, drop, and resize events\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }, \"Click an event to delete it\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.weekendsVisible,\n      onChange: this.handleWeekendsToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }), \"toggle weekends\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-sidebar-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, \"All Events (\", this.state.currentEvents.length, \")\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, this.state.currentEvents.map(renderSidebarEvent))));\n  }\n\n}\n\nfunction renderEventContent(eventInfo) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, eventInfo.timeText), /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, eventInfo.description));\n}\n\nfunction renderSidebarEvent(event) {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: event.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, formatDate(event.startdate, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  })), /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, event.description));\n}","map":{"version":3,"sources":["/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/DemoApp.jsx"],"names":["React","FullCalendar","formatDate","dayGridPlugin","timeGridPlugin","interactionPlugin","INITIAL_EVENTS","createEventId","Button","Modal","ModalHeader","ModalBody","ModalFooter","Container","Row","Col","DataTable","CSVLink","axios","ModalForm","DemoApp","Component","calendarComponentRef","createRef","state","modal","weekendsVisible","currentEvents","addEventToState","event","setState","prevState","toggle","updateState","eventIndex","findIndex","data","id","newArray","slice","deleteEventFromState","updatedEvents","filter","handleWeekendsToggle","handleDateSelect","selectInfo","title","prompt","calendarApi","view","calendar","unselect","addEvent","customer","project","type","hours","startdate","startStr","enddate","endStr","description","handleEventClick","el","handleEvents","events","componentDidMount","get","then","response","console","log","calendarEvents","catch","error","render","marginTop","left","center","right","start","renderTahta","margin","float","marginRight","renderCalendar","renderSidebar","renderEventContent","length","map","renderSidebarEvent","eventInfo","timeText","year","month","day"],"mappings":"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","sourcesContent":["import React from 'react'\nimport FullCalendar, { formatDate } from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport { INITIAL_EVENTS, createEventId } from './event-utils'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { Container, Row, Col } from 'reactstrap'\nimport DataTable from './components/DataTable'\nimport { CSVLink } from \"react-csv\"\nimport axios from 'axios';\nimport ModalForm from './components/Modal'\nimport \"@fullcalendar/common/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\n\nexport default class DemoApp extends React.Component {\n\n    calendarComponentRef = React.createRef();\n    state = {\n        modal: false,\n        weekendsVisible: true,\n        currentEvents: []\n    }\n\n  /*  getEvents() {\n        fetch('https://localhost:5001/api/events/')\n            .then(response => response.json())\n            .then(currentEvents => this.setState({ currentEvents }))\n            .catch(err => console.log(err))\n    }\n    */\n\n    addEventToState = (event) => {\n        this.setState(prevState => ({\n            currentEvents: [...prevState.currentEvents, event]\n        }))\n    }\n\n    toggle = () => {\n        this.setState({ modal: !this.state.modal });\n    };\n\n    updateState = (event) => {\n        const eventIndex = this.state.currentEvents.findIndex(data => data.id === event.id)\n        const newArray = [\n            // destructure all items from beginning to the indexed item\n            ...this.state.currentEvents.slice(0, eventIndex),\n            // add the updated item to the array\n            event,\n            // add the rest of the items to the array from the index after the replaced item\n            ...this.state.currentEvents.slice(eventIndex + 1)\n        ]\n        this.setState({ currentEvents: newArray })\n    }\n\n    deleteEventFromState = (id) => {\n        const updatedEvents = this.state.currentEvents.filter(event => event.id !== id)\n        this.setState({ currentEvents: updatedEvents })\n    }\n\n    componentDidMount() {\n        axios.get('/api/events')\n            .then(response => {\n                this.setState({ currentEvents: response.data })\n                console.log({ calendarEvents: response.data })\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    render(){\n        return (<div className=\"demo-app\">\n            <div className='demo-app-main' style={{ marginTop: 30 }}>\n                <FullCalendar\n                    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                   \n                    headerToolbar={{\n                        left: \"prev,next today\",\n                        center: \"title\",\n                        right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n                    }}\n                    \n                    ref={this.calendarComponentRef}\n                    weekends={this.state.weekendsVisible}\n                    events={this.state.currentEvents}\n                    eventClick={this.handleEventClick}\n                    nowIndicator='true'\n                    height='parent'\n                />\n                <Modal\n                    isOpen={this.state.modal}\n                    toggle={this.toggle}\n                >\n                    <ModalHeader toggle={this.toggle}>\n                        EVENT TITLE SHOULD GO HERE: {this.state.currentEvents.title}\n                    </ModalHeader>\n                    <ModalBody>\n                        <div>\n                            EVENT INFO SHOULD GO HERE: {this.state.currentEvents.start}\n                        </div>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\">Do Something</Button>{\" \"}\n                        <Button color=\"secondary\" onClick={this.toggle}>\n                            Cancel\n                </Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        </div>\n        );\n    }\n\n\n\n\nrenderTahta() {\n        return (\n            <div>\n\n                <Container className=\"DemoApp\">\n                    <Row>\n                        <Col>\n                            <h1 style={{ margin: \"20px 0\" }}>Event Database</h1>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <DataTable currentEvents={this.state.currentEvents} updateState={this.updateState} deleteEventFromState={this.deleteEventFromState} />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <CSVLink\n                                filename={\"db.csv\"}\n                                color=\"primary\"\n                                style={{ float: \"left\", marginRight: \"10px\" }}\n                                className=\"btn btn-primary\"\n                                data={this.state.currentEvents}>\n                                Download CSV\n            </CSVLink>\n                            <ModalForm buttonLabel=\"Add Event\" addEventToState={this.addEventToState} />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n\n\n\n        )\n}\n\n    renderCalendar() {\n        return (\n            <div className='demo-app'>\n                {this.renderSidebar()}\n                <div className='demo-app-main'>\n                    <FullCalendar\n                        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                        headerToolbar={{\n                            left: 'prev,next today',\n                            center: 'title',\n                            right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                        }}\n                        initialView='dayGridMonth'\n                        editable={true}\n                        selectable={true}\n                        selectMirror={true}\n                        dayMaxEvents={true}\n                        weekends={this.state.weekendsVisible}\n                        initialEvents={INITIAL_EVENTS}  // alternatively, use the `events` setting to fetch from a feed\n                        select={this.handleDateSelect}\n                        eventContent={renderEventContent} // custom render function\n                        eventClick={this.handleEventClick}\n                        eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n                    /* you can update a remote database when these fire:\n                    eventAdd={function(){}}\n               /*     eventChange={function(){}}\n                    eventRemove={function(){}}\n\n*/\n                    />\n                </div>\n            </div>\n            )\n    }\n\n    renderSidebar() {\n        return (\n            <div className='demo-app-sidebar'>\n                <div className='demo-app-sidebar-section'>\n                    <h2>Instructions</h2>\n                    <ul>\n                        <li>Select dates and you will be prompted to create a new event</li>\n                        <li>Drag, drop, and resize events</li>\n                        <li>Click an event to delete it</li>\n                    </ul>\n                </div>\n                <div className='demo-app-sidebar-section'>\n                    <label>\n                        <input\n                            type='checkbox'\n                            checked={this.state.weekendsVisible}\n                            onChange={this.handleWeekendsToggle}\n                        ></input>\n                        toggle weekends\n          </label>\n                </div>\n                <div className='demo-app-sidebar-section'>\n                    <h2>All Events ({this.state.currentEvents.length})</h2>\n                    <ul>\n                        {this.state.currentEvents.map(renderSidebarEvent)}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n\n    handleWeekendsToggle = () => {\n        this.setState({\n            weekendsVisible: !this.state.weekendsVisible\n        })\n    }\n\n    handleDateSelect = (selectInfo) => {\n        let title = prompt('Please enter a new title for your event')\n\n        let calendarApi = selectInfo.view.calendar\n\n        calendarApi.unselect() // clear date selection\n\n        if (title) {\n            calendarApi.addEvent({\n                id:5,\n                customer: \"Kesgisu\",\n                project: \"TelekomTakım\",\n                type: \"Bilgisayar\",\n                hours: \"5\",\n                startdate: selectInfo.startStr+'T00:00:00',\n                enddate: selectInfo.endStr+'T00:00:00',\n                description: \"başardın\"\n            })\n        }\n       /* this.addEventToState()*/\n    }\n\n    handleEventClick = ({ currentEvents, el }) => {\n        this.toggle();\n        this.setState({ currentEvents });\n    };\n\n    /* eskisi\n    handleEventClick = (clickInfo) => {\n        if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.description}'`)) {\n            clickInfo.event.remove()\n        }\n    }\n    */\n    handleEvents = (events) => {\n        this.setState({\n            currentEvents: events\n        })\n    }\n\n}\n\nfunction renderEventContent(eventInfo) {\n    return (\n        \n        <>\n            <b>{eventInfo.timeText}</b>\n            <i>{eventInfo.description}</i>\n        </>\n    )\n}\n\nfunction renderSidebarEvent(event) {\n    return (\n        <li key={event.id}>\n            <b>{formatDate(event.startdate, { year: 'numeric', month: 'short', day: 'numeric' })}</b> \n            <i>{event.description}</i>\n        </li>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}