{"ast":null,"code":"var _jsxFileName = \"/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/App.js\";\nimport React, { Component } from 'react';\nimport BigCalendar from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport axios from 'axios';\nimport logo from \"./logo.svg\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport './App.css';\nmoment.locale('en-GB');\nBigCalendar.momentLocalizer(moment);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.convertDate = date => {\n      return moment.utc(date).toDate();\n    };\n\n    this.state = {\n      cal_events: [//State is updated via componentDidMount\n      ]\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3001/events').then(response => {\n      console.log(response.data);\n      let appointments = response.data;\n\n      for (let i = 0; i < appointments.length; i++) {\n        appointments[i].start = this.convertDate(appointments[i].start);\n        appointments[i].end = this.convertDate(appointments[i].end);\n      }\n\n      this.setState({\n        cal_events: appointments\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      cal_events\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"React Calendar\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 700\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BigCalendar, {\n      events: cal_events,\n      step: 30,\n      defaultView: \"week\",\n      views: ['month', 'week', 'day'],\n      defaultDate: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aardaisenkul/Desktop/ArdaHw/ArdaHw3/ArdaHw3/ClientApp/src/App.js"],"names":["React","Component","BigCalendar","moment","axios","locale","momentLocalizer","App","constructor","props","convertDate","date","utc","toDate","state","cal_events","componentDidMount","get","then","response","console","log","data","appointments","i","length","start","end","setState","catch","error","render","logo","height","Date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,OAAO,mDAAP;AACA,OAAO,WAAP;AAEAD,MAAM,CAACE,MAAP,CAAc,OAAd;AACAH,WAAW,CAACI,eAAZ,CAA4BH,MAA5B;;AAEA,MAAMI,GAAN,SAAkBN,SAAlB,CAA4B;AAIxBO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,WAXmB,GAWJC,IAAD,IAAU;AACpB,aAAOR,MAAM,CAACS,GAAP,CAAWD,IAAX,EAAiBE,MAAjB,EAAP;AACH,KAbkB;;AAGf,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,CACR;AADQ;AADH,KAAb;AAMH;;AAMDC,EAAAA,iBAAiB,GAAG;AAGhBZ,IAAAA,KAAK,CAACa,GAAN,CAAU,8BAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,UAAIC,YAAY,GAAGJ,QAAQ,CAACG,IAA5B;;AAEA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAAY,CAACE,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAE1CD,QAAAA,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,GAAwB,KAAKhB,WAAL,CAAiBa,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAjC,CAAxB;AACAH,QAAAA,YAAY,CAACC,CAAD,CAAZ,CAAgBG,GAAhB,GAAsB,KAAKjB,WAAL,CAAiBa,YAAY,CAACC,CAAD,CAAZ,CAAgBG,GAAjC,CAAtB;AAEH;;AAED,WAAKC,QAAL,CAAc;AACVb,QAAAA,UAAU,EAAEQ;AADF,OAAd;AAIH,KAhBL,EAiBKM,KAjBL,CAiBW,UAAUC,KAAV,EAAiB;AACpBV,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACH,KAnBL;AAoBH;;AAGDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEhB,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAEkB,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,CADJ,eAKI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AACI,MAAA,MAAM,EAAElB,UADZ;AAEI,MAAA,IAAI,EAAE,EAFV;AAGI,MAAA,WAAW,EAAC,MAHhB;AAII,MAAA,KAAK,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,KAAlB,CAJX;AAKI,MAAA,WAAW,EAAE,IAAImB,IAAJ,EALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALJ,CADJ;AAiBH;;AAlEuB;;AAqE5B,eAAe3B,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport BigCalendar from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nimport axios from 'axios'\n\n\nimport logo from './logo.svg';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport './App.css';\n\nmoment.locale('en-GB');\nBigCalendar.momentLocalizer(moment);\n\nclass App extends Component {\n\n\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            cal_events: [\n                //State is updated via componentDidMount\n            ],\n        }\n\n    }\n\n    convertDate = (date) => {\n        return moment.utc(date).toDate()\n    }\n\n    componentDidMount() {\n\n\n        axios.get('http://localhost:3001/events')\n            .then(response => {\n                console.log(response.data);\n                let appointments = response.data;\n\n                for (let i = 0; i < appointments.length; i++) {\n\n                    appointments[i].start = this.convertDate(appointments[i].start)\n                    appointments[i].end = this.convertDate(appointments[i].end)\n\n                }\n\n                this.setState({\n                    cal_events: appointments\n                })\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n\n    render() {\n\n        const { cal_events } = this.state\n\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <h1 className=\"App-title\">React Calendar</h1>\n                </header>\n                <div style={{ height: 700 }}>\n                    <BigCalendar\n                        events={cal_events}\n                        step={30}\n                        defaultView='week'\n                        views={['month', 'week', 'day']}\n                        defaultDate={new Date()}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}